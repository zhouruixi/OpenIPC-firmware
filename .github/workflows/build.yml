name: build
on:
  workflow_dispatch:
  release:
    types: [published]

env:
  TAG_NAME: ${{ github.event.release.tag_name }}

jobs:
  buildroot:
    name: Firmware
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        platform:
          # FPV
          - ssc30kq_fpv
          - ssc338q_fpv
          - ssc378qe_fpv

          # DigitalFPV
          - ssc30kq_digitalfpv
          - ssc338q_digitalfpv
          - ssc378qe_digitalfpv

    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Prepare firmware
        run: |
          echo "nameserver 8.8.8.8" | sudo tee /etc/resolv.conf
          echo CACHE_DATE=$(date +%m) >> ${GITHUB_ENV}

      - name: Setup ccache
        if: github.event_name != 'pull_request'
        uses: actions/cache@v4
        with:
          path: /tmp/ccache
          key: ${{matrix.platform}}-${{env.CACHE_DATE}}

      - name: Restore ccache
        if: github.event_name == 'pull_request'
        uses: actions/cache/restore@v4
        with:
          path: /tmp/ccache
          key: ${{matrix.platform}}-${{env.CACHE_DATE}}

      - name: Build firmware
        run: |
          export GIT_HASH=$(git rev-parse --short ${GITHUB_SHA})
          export GIT_BRANCH=${GITHUB_REF_NAME}
          echo GIT_HASH=${GIT_HASH} >> ${GITHUB_ENV}
          echo GIT_BRANCH=${GIT_BRANCH} >> ${GITHUB_ENV}

          mkdir -p /tmp/ccache
          ln -s /tmp/ccache ${HOME}/.ccache
          make BOARD=${{matrix.platform}}

          TIME=$(date -d @${SECONDS} +%M:%S)
          echo TIME=${TIME} >> ${GITHUB_ENV}

          NORFW=$(find output/images -name openipc*nor*)
          if [ -e ${NORFW} ]; then
            echo NORFW=${NORFW} >> ${GITHUB_ENV}
          fi

          NANDFW=$(find output/images -name openipc*nand*)
          if [ -e ${NANDFW} ]; then
            echo NANDFW=${NANDFW} >> ${GITHUB_ENV}
          fi

      - name: Upload release firmware
        if: github.event_name == 'release'
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{env.TAG_NAME}}
          token: ${{ secrets.RELEASE_TOKEN }}
          files: |
            ${{env.NORFW}}
